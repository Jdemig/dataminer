{"version":3,"sources":["../../src/lib/getUrlAttributes.js"],"names":["getUrlAttributes","url","urlAttributes","originalUrl","protocol","getProtocol","primaryDomain","getPrimaryDomain","route","getRoute","domainExtension","getDomainExtension","splitProtocol","split","length","protocolStrippedUrl","includes","splitUrl","splitParameter","domainExtensionPlusRoute","routePlusDomainArray"],"mappings":";;;;;;;AAAO,MAAMA,gBAAgB,GAAIC,GAAD,IAAS;AAEvC,QAAMC,aAAa,GAAG;AACpBC,IAAAA,WAAW,EAAEF,GADO;AAEpBG,IAAAA,QAAQ,EAAEC,WAAW,CAACJ,GAAD,CAFD;AAGpBK,IAAAA,aAAa,EAAEC,gBAAgB,CAACN,GAAD,CAHX;AAIpBO,IAAAA,KAAK,EAAEC,QAAQ,CAACR,GAAD,CAJK;AAKpBS,IAAAA,eAAe,EAAEC,kBAAkB,CAACV,GAAD;AALf,GAAtB;AAQA,SAAOC,aAAP;AACD,CAXM;;;;AAaA,MAAMG,WAAW,GAAIJ,GAAD,IAAS;AAClC,QAAMW,aAAa,GAAGX,GAAG,CAACY,KAAJ,CAAU,KAAV,CAAtB;;AACA,MAAID,aAAa,CAACE,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,WAAOF,aAAa,CAAC,CAAD,CAApB;AACD;;AACD,SAAO,IAAP;AACD,CANM;;;;AAQA,MAAML,gBAAgB,GAAIN,GAAD,IAAS;AACvC,MAAIc,mBAAmB,GAAG,EAA1B;;AACA,MAAId,GAAG,CAACe,QAAJ,CAAa,KAAb,CAAJ,EAAyB;AACvBD,IAAAA,mBAAmB,GAAGd,GAAG,CAACY,KAAJ,CAAU,KAAV,EAAiB,CAAjB,CAAtB;AACD,GAFD,MAEO;AACLE,IAAAA,mBAAmB,GAAGd,GAAtB;AACD;;AAED,QAAMgB,QAAQ,GAAGF,mBAAmB,CAACF,KAApB,CAA0B,GAA1B,CAAjB;AACA,SAAOI,QAAQ,CAACA,QAAQ,CAACH,MAAT,GAAkB,CAAnB,CAAf;AACD,CAVM;;;;AAYA,MAAMH,kBAAkB,GAAIV,GAAD,IAAS;AACzC,QAAMiB,cAAc,GAAGX,gBAAgB,CAACN,GAAD,CAAhB,GAAwB,GAA/C;AACA,QAAMgB,QAAQ,GAAGhB,GAAG,CAACY,KAAJ,CAAUK,cAAV,CAAjB;AAEA,QAAMC,wBAAwB,GAAGF,QAAQ,CAACA,QAAQ,CAACH,MAAT,GAAkB,CAAnB,CAAzC;AAEA,QAAMM,oBAAoB,GAAGD,wBAAwB,CAACN,KAAzB,CAA+B,GAA/B,CAA7B;AAEA,SAAOO,oBAAoB,CAAC,CAAD,CAA3B;AACD,CATM;;;;AAWA,MAAMX,QAAQ,GAAIR,GAAD,IAAS;AAC/B,MAAI,CAACM,gBAAgB,CAACN,GAAD,CAArB,EAA4B;AAC1B,WAAOA,GAAP;AACD;;AACD,QAAMiB,cAAc,GAAG,MAAMP,kBAAkB,CAACV,GAAD,CAA/C;AACA,QAAMgB,QAAQ,GAAGhB,GAAG,CAACY,KAAJ,CAAUK,cAAV,CAAjB;AAEA,SAAOD,QAAQ,CAACA,QAAQ,CAACH,MAAT,GAAkB,CAAnB,CAAf;AACD,CARM;;;eAUQd,gB","sourcesContent":["export const getUrlAttributes = (url) => {\n\n  const urlAttributes = {\n    originalUrl: url,\n    protocol: getProtocol(url),\n    primaryDomain: getPrimaryDomain(url),\n    route: getRoute(url),\n    domainExtension: getDomainExtension(url),\n  };\n\n  return urlAttributes;\n}\n\nexport const getProtocol = (url) => {\n  const splitProtocol = url.split('://');\n  if (splitProtocol.length === 2) {\n    return splitProtocol[0];\n  }\n  return null;\n}\n\nexport const getPrimaryDomain = (url) => {\n  let protocolStrippedUrl = '';\n  if (url.includes('://')) {\n    protocolStrippedUrl = url.split('://')[1];\n  } else {\n    protocolStrippedUrl = url;\n  }\n\n  const splitUrl = protocolStrippedUrl.split('.');\n  return splitUrl[splitUrl.length - 2];\n}\n\nexport const getDomainExtension = (url) => {\n  const splitParameter = getPrimaryDomain(url) + '.';\n  const splitUrl = url.split(splitParameter);\n\n  const domainExtensionPlusRoute = splitUrl[splitUrl.length - 1];\n\n  const routePlusDomainArray = domainExtensionPlusRoute.split('/');\n\n  return routePlusDomainArray[0];\n}\n\nexport const getRoute = (url) => {\n  if (!getPrimaryDomain(url)) {\n    return url;\n  }\n  const splitParameter = '.' + getDomainExtension(url);\n  const splitUrl = url.split(splitParameter);\n\n  return splitUrl[splitUrl.length - 1];\n}\n\nexport default getUrlAttributes;"],"file":"getUrlAttributes.js"}